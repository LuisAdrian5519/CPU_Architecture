$date
  Fri May 10 11:29:56 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! ldr1 $end
$var reg 1 " ldr2 $end
$var reg 1 # ldr3 $end
$var reg 4 $ x[3:0] $end
$var reg 2 % mux1[1:0] $end
$var reg 2 & mux2[1:0] $end
$var reg 4 ' out1[3:0] $end
$var reg 4 ( out2[3:0] $end
$var reg 1 ) clk $end
$var reg 1 * clock_on $end
$scope module uut $end
$var reg 1 + clk $end
$var reg 1 , ldr1 $end
$var reg 1 - ldr2 $end
$var reg 1 . ldr3 $end
$var reg 4 / x[3:0] $end
$var reg 2 0 mux1[1:0] $end
$var reg 2 1 mux2[1:0] $end
$var reg 4 2 out1[3:0] $end
$var reg 4 3 out2[3:0] $end
$var reg 4 4 r1[3:0] $end
$var reg 4 5 r2[3:0] $end
$var reg 4 6 r3[3:0] $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
b0000 $
b00 %
b00 &
b0000 '
b0000 (
0)
1*
0+
0,
0-
0.
b0000 /
b00 0
b00 1
b0000 2
b0000 3
b0000 4
b0000 5
b0000 6
#25000000
1)
1+
#50000000
0)
0+
#75000000
1)
1+
#100000000
1!
1"
1#
b0011 $
b0011 '
b0011 (
0)
0+
1,
1-
1.
b0011 /
b0011 2
b0011 3
#125000000
1)
1+
b0011 4
b0011 5
b0011 6
#150000000
0)
0+
#175000000
1)
1+
#200000000
b01 %
b10 &
0)
0+
b01 0
b10 1
#225000000
1)
1+
#250000000
0)
0+
#275000000
1)
1+
#300000000
0"
0#
b0001 $
0)
0+
0-
0.
b0001 /
#325000000
b0001 '
1)
1+
b0001 2
b0001 4
#350000000
0)
0+
#375000000
1)
1+
#400000000
0)
0+
#425000000
1)
1+
#450000000
0)
0+
#475000000
1)
1+
#500000000
0)
0*
0+
#525000000
1)
1+
#550000000
