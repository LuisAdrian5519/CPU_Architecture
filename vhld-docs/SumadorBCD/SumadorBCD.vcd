$date
  Thu Mar 14 21:38:45 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # r[3:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$scope module uut $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 4 ( r[3:0] $end
$var reg 1 ) cin $end
$var reg 1 * cout $end
$scope module sum1 $end
$var reg 1 + a0 $end
$var reg 1 , a1 $end
$var reg 1 - a2 $end
$var reg 1 . a3 $end
$var reg 1 / b0 $end
$var reg 1 0 b1 $end
$var reg 1 1 b2 $end
$var reg 1 2 b3 $end
$var reg 1 3 cin $end
$var reg 1 4 s0 $end
$var reg 1 5 s1 $end
$var reg 1 6 s2 $end
$var reg 1 7 s3 $end
$var reg 1 8 cout $end
$var reg 5 9 a[4:0] $end
$var reg 5 : b[4:0] $end
$var reg 5 ; c[4:0] $end
$var reg 5 < suma[4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
b0000 #
0$
0%
b0000 &
b0000 '
b0000 (
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
b00000 9
b00000 :
b00000 ;
b00000 <
#100000000
b0001 !
b0001 "
b0010 #
b0001 &
b0001 '
b0010 (
1+
1/
15
b00001 9
b00001 :
b00010 <
#200000000
b0010 "
b0011 #
b0010 '
b0011 (
0/
10
14
b00010 :
b00011 <
#300000000
b0100 "
b0101 #
b0100 '
b0101 (
00
11
05
16
b00100 :
b00101 <
#400000000
