$date
  Mon Mar 18 15:11:17 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! a0 $end
$var reg 1 " a1 $end
$var reg 1 # a2 $end
$var reg 1 $ a3 $end
$var reg 1 % b0 $end
$var reg 1 & b1 $end
$var reg 1 ' b2 $end
$var reg 1 ( b3 $end
$var reg 1 ) cin $end
$var reg 1 * s0 $end
$var reg 1 + s1 $end
$var reg 1 , s2 $end
$var reg 1 - s3 $end
$var reg 1 . cout $end
$scope module uut $end
$var reg 1 / a0 $end
$var reg 1 0 a1 $end
$var reg 1 1 a2 $end
$var reg 1 2 a3 $end
$var reg 1 3 b0 $end
$var reg 1 4 b1 $end
$var reg 1 5 b2 $end
$var reg 1 6 b3 $end
$var reg 1 7 cin $end
$var reg 1 8 s0 $end
$var reg 1 9 s1 $end
$var reg 1 : s2 $end
$var reg 1 ; s3 $end
$var reg 1 < cout $end
$var reg 5 = a[4:0] $end
$var reg 5 > b[4:0] $end
$var reg 5 ? c[4:0] $end
$var reg 5 @ suma[4:0] $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
b00000 =
b00000 >
b00000 ?
b00000 @
#100000000
1#
1&
1'
1+
1-
11
14
15
19
1;
b00100 =
b00110 >
b01010 @
#200000000
1"
1$
1%
0&
1*
0-
1.
10
12
13
04
18
0;
1<
b01110 =
b00101 >
b10011 @
#300000000
